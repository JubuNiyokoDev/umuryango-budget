name: Build and Deploy Multi-Architecture APKs

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Cache node_modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install dependencies
        run: npm install

      - name: Copy assets
        run: |
          mkdir -p android/app/src/main/assets
          cp -r assets/* android/app/src/main/assets/ || true

      - name: Suppress compileSdk warning
        run: |
          echo "android.suppressUnsupportedCompileSdk=36" >> android/gradle.properties

      - name: Configure multi-architecture APKs
        run: |
          sed -i '/android {/a\
            splits {\
              abi {\
                reset()\
                enable true\
                universalApk true\
                include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"\ 
              }\
            }' android/app/build.gradle

      - name: Build Multi-Architecture APKs
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease
          
      - name: Upload APKs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: android/app/build/outputs/apk/release/*.apk

      - name: Upload APKs to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: android/app/build/outputs/apk/release/*.apk

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: umuryango-budget
